@model List<ViewDataQuantityPlan>
@using SMO.Service.BP.KE_HOACH_SAN_LUONG;
@using SMO.Service.BP.KE_HOACH_DOANH_THU;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var gridTab1 = Guid.NewGuid().ToString("N");
    var gridTab2 = Guid.NewGuid().ToString("N");
    var gridTab3 = Guid.NewGuid().ToString("N");
    var gridTab4 = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var dataTab2 = ViewBag.DataTab2 as List<ViewDataRevenuePlan>;
    var dataTab3 = ViewBag.DataTab3 as List<ViewDataRevenuePlan>;
    var dataTab4 = ViewBag.DataTab4 as List<ViewDataRevenuePlan>;
    var formIdExportExcel = Guid.NewGuid();
}
<style>
    .row-bold .dhx_grid-cell, .row-bold .dhx_tree-cell {
        font-weight: bold
    }

    .grid .dhx_grid-cell {
        word-break: break-word
    }

    .dhx_slider {
        padding: 8px 0;
    }
</style>

<ul class="nav nav-tabs" role="tablist" style="width: 100%; display: flex;">
    <li role="presentation" class="active" style="cursor: pointer;">
        <a href="#tab1" data-toggle="tab">Kế hoạch tổng</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a data-toggle="tab" href="#tab4">Doanh thu tổng</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a data-toggle="tab" href="#tab5">Doanh thu nội địa</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a data-toggle="tab" href="#tab6">Doanh thu quốc tế</a>
    </li>
</ul>
<div class="tab-content" style="padding-bottom:0">
    <div role="tabpanel" class="tab-pane fade in active" id="tab1">
        <div style="height: calc(100vh - 250px);" id="@gridTab1"></div>
    </div>
    <div role="tabpanel" class="tab-pane fade" id="tab4">
        <div style="height: calc(100vh - 250px);" id="@gridTab2"></div>
    </div>
    <div role="tabpanel" class="tab-pane fade" id="tab5">
        <div style="height: calc(100vh - 250px);" id="@gridTab3"></div>
    </div>
    <div role="tabpanel" class="tab-pane fade" id="tab6">
        <div style="height: calc(100vh - 250px);" id="@gridTab4"></div>
    </div>
</div>

<div class="hidden">
    <form id="@formIdExportExcel" target="_blank" method="post" action="@Url.Action("ExportExcelGridData")">
        @Html.Hidden("TreedataTab1")
        @Html.Hidden("TreedataTab2")
        @Html.Hidden("TreedataTab3")
        @Html.Hidden("TreedataTab4")
    </form>
</div>
<script type="text/javascript">

    //Init Data Month...
    const rawDataMonth = @Html.Raw(JsonConvert.SerializeObject(Model, jsonSerializeSettings));
    let columnsMonth = [
        { id: "airport", header: [{ text: "SÂN BAY", align: "center" }, { content: "selectFilter" }], minWidth: 130 },
        { id: "airlines", header: [{ text: "HHK", align: "center" }, { content: "selectFilter" }], minWidth: 120 },
        { id: "element", header: [{ text: "KHOẢN MỤC", align: "center" }, { content: "selectFilter" }], minWidth: 185, footer: [{ text: "TỔNG CỘNG" }] },

        { id: "jan", header: [{ text: "THÁNG 1", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "feb", header: [{ text: "THÁNG 2", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "mar", header: [{ text: "THÁNG 3", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "apr", header: [{ text: "THÁNG 4", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "may", header: [{ text: "THÁNG 5", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "jun", header: [{ text: "THÁNG 6", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "jul", header: [{ text: "THÁNG 7", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "aug", header: [{ text: "THÁNG 8", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "sep", header: [{ text: "THÁNG 9", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "oct", header: [{ text: "THÁNG 10", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "nov", header: [{ text: "THÁNG 11", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "dec", header: [{ text: "THÁNG 12", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "total", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "average", header: [{ text: "TRUNG BÌNH", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "des", header: [{ text: "GHI CHÚ", align: "center" }], align: "right", minWidth: 150 },
    ];

    const treeGrid = new dhx.Grid("@gridTab1", {
        columns: columnsMonth,
        data: rawDataMonth,
        leftSplit: 3,
        resizable: true,
        keyNavigation: true,
        selection: true,
        autoHeight: true,
    });

    //Init Data Tab2...
    const rawDataTab2 = @Html.Raw(JsonConvert.SerializeObject(dataTab2, jsonSerializeSettings));
    const rawDataTab3 = @Html.Raw(JsonConvert.SerializeObject(dataTab3, jsonSerializeSettings));
    const rawDataTab4 = @Html.Raw(JsonConvert.SerializeObject(dataTab4, jsonSerializeSettings));
    let columns = [
        { id: "airport", header: [{ text: "SÂN BAY", align: "center" }, { content: "selectFilter" }], minWidth: 130, footer: [{ text: "TỔNG CỘNG" }] },
        { id: "vn", header: [{ text: "VN", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "ov", header: [{ text: "0V", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "bl", header: [{ text: "BL", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "vj", header: [{ text: "VJ", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "qh", header: [{ text: "QH", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "vu", header: [{ text: "VU", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "other", header: [{ text: "HKTN#", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "nn", header: [{ text: "HKQT", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
        { id: "total", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#,#", footer: [{ content: "sum" }] },
    ];

    const gridTab2 = new dhx.Grid("@gridTab2", {
        columns: columns,
        data: rawDataTab2,
        resizable: true,
        keyNavigation: true,
        selection: true,
        autoHeight: true,
    });
    const gridTab3 = new dhx.Grid("@gridTab3", {
        columns: columns,
        data: rawDataTab3,
        resizable: true,
        keyNavigation: true,
        selection: true,
        autoHeight: true,
    });
    const gridTab4 = new dhx.Grid("@gridTab4", {
        columns: columns,
        data: rawDataTab4,
        resizable: true,
        keyNavigation: true,
        selection: true,
        autoHeight: true,
    });

    //Init Slider
    const MAIN_FONT_SIZE = 14;
    var FONT_SIZE_CHANGE = 14;
    const widthMapMonth = new Map(columnsMonth.map(({ minWidth, id }) => ([id, minWidth])));
    const slider = new dhx.Slider("slider", {
        min: 4,
        max: 26,
        step: 1,
        value: MAIN_FONT_SIZE,
        tooltip: false
    });

    slider.events.on("change", value => {
        FONT_SIZE_CHANGE = parseInt(value);
        const fontSize = parseInt(value);
        columnsMonth = columnsMonth.map(column => {
            return {
                ...column,
                minWidth: widthMapMonth.get(column.id) * (fontSize / MAIN_FONT_SIZE),
            };
        });
        $(".dhx_grid-cell").css("font-size", `${value}px`);
        $(".dhx_tree-cell").css("font-size", `${value}px`);
        $(".dhx_grid-header-cell").css("font-size", `${value}px`);
        treeGrid.setColumns(columnsMonth);
    });

    treeGrid.events.on("scroll", function (e) {
        $(".dhx_grid-cell").css("font-size", `${FONT_SIZE_CHANGE}px`);
        $(".dhx_tree-cell").css("font-size", `${FONT_SIZE_CHANGE}px`);
    });

    function DownloadDataQuantityPlan() {
    var TreedataTab1 = JSON.stringify(treeGrid.data.serialize());
    var TreedataTab2 = JSON.stringify(gridTab2.data.serialize());
    var TreedataTab3 = JSON.stringify(gridTab3.data.serialize());
    var TreedataTab4 = JSON.stringify(gridTab4.data.serialize());
    $('#@formIdExportExcel #TreedataTab1').val(TreedataTab1);
    $('#@formIdExportExcel #TreedataTab2').val(TreedataTab2);
    $('#@formIdExportExcel #TreedataTab3').val(TreedataTab3);
    $('#@formIdExportExcel #TreedataTab4').val(TreedataTab4);
    $('#@formIdExportExcel').submit();
}

</script>






