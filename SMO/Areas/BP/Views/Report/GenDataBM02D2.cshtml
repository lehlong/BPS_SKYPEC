@model List<SMO.Service.BP.ReportModel>
@using System.Text;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var gridId = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var formIdExportExcel = Guid.NewGuid();

}
<style>
    .row-bold .dhx_grid-cell, .row-bold .dhx_tree-cell {
        font-weight: bold
    }

    .grid .dhx_grid-cell {
        word-break: break-word
    }

    .dhx_header-wrapper {
        z-index: 1;
    }
</style>

<div style="height: calc(100vh - 240px); width: 100%" id="@gridId"></div>
<div class="hidden">
    <form id="@formIdExportExcel" target="_blank" method="post" action="@Url.Action("ExportExcelGridData")">
        @Html.Hidden("Treedata")
        @Html.Hidden("Template")

    </form>
</div>
<script type="text/javascript">
    const rawData = @Html.Raw(JsonConvert.SerializeObject(Model, jsonSerializeSettings));
    let columns = [
        { id: "name", header: [{ text: "NỘI DUNG", align: "center" }, { content: "inputFilter" }], minWidth: 300 },

        { id: "col1", header: [{ text: "TH 2019", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
        { id: "col2", header: [{ text: "TH 2020", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
        { id: "col3", header: [{ text: "TH 2021", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
        { id: "col4", header: [{ text: "TH 2023", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },

        { id: "col5", header: [{ text: "NĂM 2023", align: "center", colspan: 3 }, { text: "KH", align: "center" }], align: "right", minWidth: 180 },
        { id: "col6", header: ["", { text: "TH", align: "center" }], align: "right", minWidth: 180 },
        { id: "col7", header: ["", { text: "GIẢI TRÌNH", align: "center" }], align: "right", minWidth: 180 },

        { id: "col8", header: [{ text: "KH 2024", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
        { id: "col9", header: [{ text: "GHI CHÚ", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
    ];
    rawData.forEach((item) => {
        if (item.isBold == true) delete item.parent;
    });
    const treeGrid = new dhx.TreeGrid("@gridId", {
        columns,
        data: rawData,
        leftSplit: 2,
        resizable: true,
        keyNavigation: true,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
        selection: true,
        autoHeight: true,
    });
    function ExportData() {
    var Treedata = JSON.stringify(treeGrid.data.serialize());
    var template = "BM_02D2";
    $('#@formIdExportExcel #Treedata').val(Treedata);
    $('#@formIdExportExcel #Template').val(template);
    $('#@formIdExportExcel').submit();
}

</script>


