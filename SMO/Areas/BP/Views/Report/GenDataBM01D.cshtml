@model SMO.Service.BP.ReportDataCenter
@using System.Text;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var gridId = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var formIdExportExcel = Guid.NewGuid();
}
<style>
    .row-bold .dhx_grid-cell, .row-bold .dhx_tree-cell {
        font-weight: bold
    }

    .grid .dhx_grid-cell {
        word-break: break-word
    }

    .dhx_header-wrapper {
        z-index: 1;
    }
</style>

<div style="height: calc(100vh - 240px); width: 100%" id="@gridId"></div>
<div class="hidden">
    <form id="@formIdExportExcel" target="_blank" method="post" action="@Url.Action("ExportExcelGridData")">
        @Html.Hidden("Treedata")
        @Html.Hidden("Template")
    </form>
</div>
<script type="text/javascript">
    const rawData = @Html.Raw(JsonConvert.SerializeObject(Model.BM01D, jsonSerializeSettings));
    let columns = [
        { id: "name", header: [{ text: "DANH MỤC ĐẦU TƯ", align: "center" }, { content: "inputFilter" }], minWidth: 500 },

        { id: "col1", header: [{ text: "TỔNG MỨC ĐT DỰ ÁN", align: "center", colspan: 2 }, { text: "TỔNG MỨC", align: "center" }], align: "right", minWidth: 180, type: "number", format: "#,#" },
        { id: "col2", header: ["", { text: "TRONG ĐÓ: TỪ NGUỒN VCSH", align: "center" }], align: "right", minWidth: 180, type: "number", format: "#,#" },

        { id: "col3", header: [{ text: "GIÁ TRỊ KHỐI LƯỢNG CÔNG VIỆC HOÀN THÀNH", align: "center", colspan: 5 }, { text: "KH", align: "center" }], align: "right", minWidth: 180 },
        { id: "col4", header: ["", { text: "9T ĐN", align: "center" }], align: "right", minWidth: 180 },
        { id: "col5", header: ["", { text: "UTH", align: "center" }], align: "right", minWidth: 180 },
        { id: "col6", header: ["", { text: "THỰC HIỆN LUỸ KẾ ĐẾN CUỐI NĂM", align: "center" }], align: "right", minWidth: 180 },
        { id: "col7", header: ["", { text: "%TH/KH", align: "center" }], align: "right", minWidth: 180 },

        { id: "col8", header: [{ text: "GIÁ TRỊ GIẢI NGÂN", align: "center", colspan: 5 }, { text: "KH", align: "center" }], align: "right", minWidth: 180 },
        { id: "col9", header: ["", { text: "9T ĐN", align: "center" }], align: "right", minWidth: 180 },
        { id: "col10", header: ["", { text: "UTH", align: "center" }], align: "right", minWidth: 180 },
        { id: "col11", header: ["", { text: "THỰC HIỆN LUỸ KẾ ĐẾN CUỐI NĂM", align: "center" }], align: "right", minWidth: 180 },
        { id: "col12", header: ["", { text: "%TH/KH", align: "center" }], align: "right", minWidth: 180 },

        { id: "col13", header: [{ text: "GIÁ TRỊ TS ĐÃ HÌNH THÀNH ĐƯA VÀO SỬ DỤNG", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
    ];
    rawData.forEach((item) => {
        if (item.id == "A" || item.id == "B") delete item.parent;
        item.col7 = Number(item.col5) == 0 || Number(item.col3) == 0 ? 0 : Number(item.col5) / Number(item.col3) * 100
    });

    const treeGrid = new dhx.TreeGrid("@gridId", {
        columns,
        data: rawData,
        leftSplit: 1,
        resizable: true,
        keyNavigation: true,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
        selection: true,
        autoHeight: true,
    });

     function ExportData() {
        var Treedata = JSON.stringify(treeGrid.data.serialize());
        var template = "BM_01D";
        $('#@formIdExportExcel #Treedata').val(Treedata);
        $('#@formIdExportExcel #Template').val(template);
    $('#@formIdExportExcel').submit();
}
</script>

