@model SMO.Service.BP.ReportDataCenter
@using System.Text;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var gridId = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var formIdExportExcel = Guid.NewGuid();
}
<div style="height: calc(100vh - 240px); width: 100%" id="@gridId"></div>
<div class="hidden">
    <form id="@formIdExportExcel" target="_blank" method="post" action="@Url.Action("ExportExcelGridData")">
        @Html.Hidden("Treedata")
        @Html.Hidden("Template")
    </form>
</div>
<script type="text/javascript">
    const rawData = @Html.Raw(JsonConvert.SerializeObject(Model.BM01D, jsonSerializeSettings));
    rawData.forEach((item) => {
        if (item.id == "A" || item.id == "B") delete item.parent;
    });
    for (var i = rawData.length - 1; i >= 0; i--) {
        var allIds = rawData.filter(x => x.parent == rawData[i].id);
        rawData[i].col1 = allIds.length == 0 ? rawData[i].col1 : _.sumBy(allIds, 'col1');
        rawData[i].col2 = allIds.length == 0 ? rawData[i].col2 : _.sumBy(allIds, 'col2');
        rawData[i].col3 = allIds.length == 0 ? rawData[i].col3 : _.sumBy(allIds, 'col3');
        rawData[i].col4 = allIds.length == 0 ? rawData[i].col4 : _.sumBy(allIds, 'col4');
        rawData[i].col5 = allIds.length == 0 ? rawData[i].col5 : _.sumBy(allIds, 'col5');
        rawData[i].col6 = allIds.length == 0 ? rawData[i].col6 : _.sumBy(allIds, 'col6');
        rawData[i].col7 = allIds.length == 0 ? rawData[i].col7 : _.sumBy(allIds, 'col7');
        rawData[i].col8 = allIds.length == 0 ? rawData[i].col8 : _.sumBy(allIds, 'col8');
        rawData[i].col9 = allIds.length == 0 ? rawData[i].col9 : _.sumBy(allIds, 'col9');
        rawData[i].col10 = allIds.length == 0 ? rawData[i].col10 : _.sumBy(allIds, 'col10');
        rawData[i].col11 = allIds.length == 0 ? rawData[i].col11 : _.sumBy(allIds, 'col11');
        rawData[i].col12 = allIds.length == 0 ? rawData[i].col12 : _.sumBy(allIds, 'col12');
    }
    const treeGrid = new dhx.Grid("@gridId", {
        columns: [
            { id: "stt", header: [{ text: "STT", align: "center", rowspan: 2 }], minWidth: 100, align: "center" },
            { id: "name", header: [{ text: "DANH MỤC ĐẦU TƯ", align: "center" }, { content: "inputFilter" }], minWidth: 500 },

            { id: "col1", header: [{ text: "TỔNG MỨC ĐT DỰ ÁN", align: "center", colspan: 2 }, { text: "TỔNG MỨC", align: "center" }], align: "right", minWidth: 180, type: "number", format: "#,#" },
            { id: "col2", header: ["", { text: "TRONG ĐÓ: TỪ NGUỒN VCSH", align: "center" }], align: "right", minWidth: 180, type: "number", format: "#,#" },

            { id: "col3", header: [{ text: "GIÁ TRỊ KHỐI LƯỢNG CÔNG VIỆC HOÀN THÀNH", align: "center", colspan: 5 }, { text: "KH", align: "center" }], align: "right", minWidth: 180 },
            { id: "col4", header: ["", { text: "9T ĐN", align: "center" }], align: "right", minWidth: 180 },
            { id: "col5", header: ["", { text: "UTH", align: "center" }], align: "right", minWidth: 180 },
            { id: "col6", header: ["", { text: "THỰC HIỆN LUỸ KẾ ĐẾN CUỐI NĂM", align: "center" }], align: "right", minWidth: 180 },
            { id: "col7", header: ["", { text: "%TH/KH", align: "center" }], align: "right", minWidth: 180 },

            { id: "col8", header: [{ text: "GIÁ TRỊ GIẢI NGÂN", align: "center", colspan: 5 }, { text: "KH", align: "center" }], align: "right", minWidth: 180 },
            { id: "col9", header: ["", { text: "9T ĐN", align: "center" }], align: "right", minWidth: 180 },
            { id: "col10", header: ["", { text: "UTH", align: "center" }], align: "right", minWidth: 180 },
            { id: "col11", header: ["", { text: "THỰC HIỆN LUỸ KẾ ĐẾN CUỐI NĂM", align: "center" }], align: "right", minWidth: 180 },
            { id: "col12", header: ["", { text: "%TH/KH", align: "center" }], align: "right", minWidth: 180 },

            { id: "col13", header: [{ text: "GIÁ TRỊ TS ĐÃ HÌNH THÀNH ĐƯA VÀO SỬ DỤNG", align: "center", rowspan: 2 }], align: "right", minWidth: 180 },
        ],
        data: rawData,
        leftSplit: 2,
        resizable: true,
        keyNavigation: true,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
        selection: 'row',
        rowHeight: 30
    });

     function ExportData() {
        var Treedata = JSON.stringify(treeGrid.data.serialize());
        var template = "BM_01D";
        $('#@formIdExportExcel #Treedata').val(Treedata);
        $('#@formIdExportExcel #Template').val(template);
    $('#@formIdExportExcel').submit();
}
</script>

