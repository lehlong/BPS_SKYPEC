@model List<SMO.Models.RevenueReportModel>
@using System.Text;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var year = ViewBag.Year as int?;
    var gridId = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var jsonData = Model.OrderBy(x => x.Order).Select(x => new
    {
        Id = x.Order.ToString(),
        Parent = x.Parent,
        Name = x.Name,
        SumYear = x.ValueSumYear.ToStringVN(),
        Jan = x.Value1.ToStringVN(),
        Feb = x.Value2.ToStringVN(),
        Mar = x.Value3.ToStringVN(),
        Apr = x.Value4.ToStringVN(),
        May = x.Value5.ToStringVN(),
        Jun = x.Value6.ToStringVN(),
        Jul = x.Value7.ToStringVN(),
        Aug = x.Value8.ToStringVN(),
        Sep = x.Value9.ToStringVN(),
        Oct = x.Value10.ToStringVN(),
        Nov = x.Value11.ToStringVN(),
        Dec = x.Value12.ToStringVN(),
        IsBold = x.IsBold
    });
}
<style>
    .row-bold .dhx_grid-cell,.row-bold .dhx_tree-cell {
        font-weight: bold
    }
    .grid .dhx_grid-cell {
        word-break: break-word
    }
    .dhx_header-wrapper {
        z-index: 1;
    }
</style>

<div style="height: calc(100vh - 240px); width: 100%" id="@gridId"></div>

<script type="text/javascript">
    const rawData = @Html.Raw(JsonConvert.SerializeObject(jsonData, jsonSerializeSettings));


    let columns = [
        { id: "name", header: [{ text: "CHỈ TIÊU", align: "center" }, { content: "inputFilter" }], minWidth: 300 },
        { id: "sumYear", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 180 },
        { id: "jan", header: [{ text: "THÁNG 1", align: "center" }], align: "right", minWidth: 180 },
        { id: "feb", header: [{ text: "THÁNG 2", align: "center" }], align: "right", minWidth: 180 },
        { id: "mar", header: [{ text: "THÁNG 3", align: "center" }], align: "right", minWidth: 180 },
        { id: "apr", header: [{ text: "THÁNG 4", align: "center" }], align: "right", minWidth: 180 },
        { id: "may", header: [{ text: "THÁNG 5", align: "center" }], align: "right", minWidth: 180 },
        { id: "jun", header: [{ text: "THÁNG 6", align: "center" }], align: "right", minWidth: 180 },
        { id: "jul", header: [{ text: "THÁNG 7", align: "center" }], align: "right", minWidth: 180 },
        { id: "aug", header: [{ text: "THÁNG 8", align: "center" }], align: "right", minWidth: 180 },
        { id: "sep", header: [{ text: "THÁNG 9", align: "center" }], align: "right", minWidth: 180 },
        { id: "oct", header: [{ text: "THÁNG 10", align: "center" }], align: "right", minWidth: 180 },
        { id: "nov", header: [{ text: "THÁNG 11", align: "center" }], align: "right", minWidth: 180 },
        { id: "dec", header: [{ text: "THÁNG 12", align: "center" }], align: "right", minWidth: 180 },
    ];
    rawData.forEach((item) => {
        if (item.parent == null) {
            delete item.parent
        }
    });
    const treeGrid = new dhx.TreeGrid("@gridId", {
        columns,
        data: rawData,
        leftSplit: 1,
        resizable: true,
        keyNavigation: true,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
        selection: true,
        autoHeight: true,
    });


</script>

