@model SMO.Models.ReportCompaseDTModel
@using System.Text;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var year = ViewBag.Year as int?;
    var gridId = Guid.NewGuid().ToString("N");
    var gridIdTab2 = Guid.NewGuid().ToString("N");
    var gridIdTab3 = Guid.NewGuid().ToString("N");

    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };

    var jsonDataTab1 = Model.Tab1.OrderBy(x => x.Order).Select(x => new
    {
        Name = x.Name,
        IsBold = x.Isbold,
        SumYear = Math.Round(x.ValueSumYear).ToStringVN(),
        Jan = Math.Round(x.Value1).ToStringVN(),
        Feb = Math.Round(x.Value2).ToStringVN(),
        Mar = Math.Round(x.Value3).ToStringVN(),
        Apr = Math.Round(x.Value4).ToStringVN(),
        May = Math.Round(x.Value5).ToStringVN(),
        Jun = Math.Round(x.Value6).ToStringVN(),
        Jul = Math.Round(x.Value7).ToStringVN(),
        Aug = Math.Round(x.Value8).ToStringVN(),
        Sep = Math.Round(x.Value9).ToStringVN(),
        Oct = Math.Round(x.Value10).ToStringVN(),
        Nov = Math.Round(x.Value11).ToStringVN(),
        Dec = Math.Round(x.Value12).ToStringVN(),
    });

    var jsonDataTab2 = Model.Tab2.OrderBy(x => x.Order).Select(x => new
    {
        Name = x.Name,
        IsBold = x.IsBold,
        SumYear = x.ValueSumYear.ToStringVN(),
        Jan = x.Value1.ToStringVN(),
        Feb = x.Value2.ToStringVN(),
        Mar = x.Value3.ToStringVN(),
        Apr = x.Value4.ToStringVN(),
        May = x.Value5.ToStringVN(),
        Jun = x.Value6.ToStringVN(),
        Jul = x.Value7.ToStringVN(),
        Aug = x.Value8.ToStringVN(),
        Sep = x.Value9.ToStringVN(),
        Oct = x.Value10.ToStringVN(),
        Nov = x.Value11.ToStringVN(),
        Dec = x.Value12.ToStringVN(),
    });

    var jsonDataTab3 = Model.Tab3.OrderBy(x => x.Order).Select(x => new
    {
        Name = x.Name,
        IsBold = x.Isbold,
        SumYear = Math.Round(x.ValueSumYear).ToStringVN() + "%",
        Jan = Math.Round(x.Value1).ToStringVN() + "%",
        Feb = Math.Round(x.Value2).ToStringVN() + "%",
        Mar = Math.Round(x.Value3).ToStringVN() + "%",
        Apr = Math.Round(x.Value4).ToStringVN() + "%",
        May = Math.Round(x.Value5).ToStringVN() + "%",
        Jun = Math.Round(x.Value6).ToStringVN() + "%",
        Jul = Math.Round(x.Value7).ToStringVN() + "%",
        Aug = Math.Round(x.Value8).ToStringVN() + "%",
        Sep = Math.Round(x.Value9).ToStringVN() + "%",
        Oct = Math.Round(x.Value10).ToStringVN() + "%",
        Nov = Math.Round(x.Value11).ToStringVN() + "%",
        Dec = Math.Round(x.Value12).ToStringVN() + "%",
    });


}
<style>
    .row-bold .dhx_grid-cell, .row-bold .dhx_tree-cell {
        font-weight: bold
    }

    .grid .dhx_grid-cell {
        word-break: break-word
    }

    .dhx_header-wrapper {
        z-index: 1;
    }
</style>

<div style="height: 500px; width: 100%" id="@gridId"></div>
<div style="height: 500px; width: 100%" id="@gridIdTab2"></div>
<div style="height: 500px; width: 100%" id="@gridIdTab3"></div>


<script type="text/javascript">
    const rawDataTab1 = @Html.Raw(JsonConvert.SerializeObject(jsonDataTab1, jsonSerializeSettings));
    const rawDataTab2 = @Html.Raw(JsonConvert.SerializeObject(jsonDataTab2, jsonSerializeSettings));
    const rawDataTab3 = @Html.Raw(JsonConvert.SerializeObject(jsonDataTab3, jsonSerializeSettings));

    let columnsTab1 = [
        { id: "name", header: [{ text: "v3.0", align: "center" }, { content: "inputFilter" }], minWidth: 300 },
        { id: "jan", header: [{ text: "THÁNG 1", align: "center" }], align: "right", minWidth: 180 },
        { id: "feb", header: [{ text: "THÁNG 2", align: "center" }], align: "right", minWidth: 180 },
        { id: "mar", header: [{ text: "THÁNG 3", align: "center" }], align: "right", minWidth: 180 },
        { id: "apr", header: [{ text: "THÁNG 4", align: "center" }], align: "right", minWidth: 180 },
        { id: "may", header: [{ text: "THÁNG 5", align: "center" }], align: "right", minWidth: 180 },
        { id: "jun", header: [{ text: "THÁNG 6", align: "center" }], align: "right", minWidth: 180 },
        { id: "jul", header: [{ text: "THÁNG 7", align: "center" }], align: "right", minWidth: 180 },
        { id: "aug", header: [{ text: "THÁNG 8", align: "center" }], align: "right", minWidth: 180 },
        { id: "sep", header: [{ text: "THÁNG 9", align: "center" }], align: "right", minWidth: 180 },
        { id: "oct", header: [{ text: "THÁNG 10", align: "center" }], align: "right", minWidth: 180 },
        { id: "nov", header: [{ text: "THÁNG 11", align: "center" }], align: "right", minWidth: 180 },
        { id: "dec", header: [{ text: "THÁNG 12", align: "center" }], align: "right", minWidth: 180 },
        { id: "sumYear", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 180 },
    ];

    let columnsTab2 = [
        { id: "name", header: [{ text: "KẾ HOẠCH", align: "center" }, { content: "inputFilter" }], minWidth: 300 },
        { id: "jan", header: [{ text: "THÁNG 1", align: "center" }], align: "right", minWidth: 180 },
        { id: "feb", header: [{ text: "THÁNG 2", align: "center" }], align: "right", minWidth: 180 },
        { id: "mar", header: [{ text: "THÁNG 3", align: "center" }], align: "right", minWidth: 180 },
        { id: "apr", header: [{ text: "THÁNG 4", align: "center" }], align: "right", minWidth: 180 },
        { id: "may", header: [{ text: "THÁNG 5", align: "center" }], align: "right", minWidth: 180 },
        { id: "jun", header: [{ text: "THÁNG 6", align: "center" }], align: "right", minWidth: 180 },
        { id: "jul", header: [{ text: "THÁNG 7", align: "center" }], align: "right", minWidth: 180 },
        { id: "aug", header: [{ text: "THÁNG 8", align: "center" }], align: "right", minWidth: 180 },
        { id: "sep", header: [{ text: "THÁNG 9", align: "center" }], align: "right", minWidth: 180 },
        { id: "oct", header: [{ text: "THÁNG 10", align: "center" }], align: "right", minWidth: 180 },
        { id: "nov", header: [{ text: "THÁNG 11", align: "center" }], align: "right", minWidth: 180 },
        { id: "dec", header: [{ text: "THÁNG 12", align: "center" }], align: "right", minWidth: 180 },
        { id: "sumYear", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 180 },
    ];

    let columnsTab3 = [
        { id: "name", header: [{ text: "TH/KH", align: "center" }, { content: "inputFilter" }], minWidth: 300 },
        { id: "jan", header: [{ text: "THÁNG 1", align: "center" }], align: "right", minWidth: 180 },
        { id: "feb", header: [{ text: "THÁNG 2", align: "center" }], align: "right", minWidth: 180 },
        { id: "mar", header: [{ text: "THÁNG 3", align: "center" }], align: "right", minWidth: 180 },
        { id: "apr", header: [{ text: "THÁNG 4", align: "center" }], align: "right", minWidth: 180 },
        { id: "may", header: [{ text: "THÁNG 5", align: "center" }], align: "right", minWidth: 180 },
        { id: "jun", header: [{ text: "THÁNG 6", align: "center" }], align: "right", minWidth: 180 },
        { id: "jul", header: [{ text: "THÁNG 7", align: "center" }], align: "right", minWidth: 180 },
        { id: "aug", header: [{ text: "THÁNG 8", align: "center" }], align: "right", minWidth: 180 },
        { id: "sep", header: [{ text: "THÁNG 9", align: "center" }], align: "right", minWidth: 180 },
        { id: "oct", header: [{ text: "THÁNG 10", align: "center" }], align: "right", minWidth: 180 },
        { id: "nov", header: [{ text: "THÁNG 11", align: "center" }], align: "right", minWidth: 180 },
        { id: "dec", header: [{ text: "THÁNG 12", align: "center" }], align: "right", minWidth: 180 },
        { id: "sumYear", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 180 },

    ];


    const treeGridTab1 = new dhx.Grid("@gridId", {
        columns: columnsTab1,
        data: rawDataTab1,
        leftSplit: 1,
        resizable: true,
        keyNavigation: true,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
        selection: true,
        autoHeight: true,
    });

    const treeGridTab2 = new dhx.Grid("@gridIdTab2", {
    columns: columnsTab2,
    data: rawDataTab2,
    leftSplit: 1,
    resizable: true,
    keyNavigation: true,
    rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
    selection: true,
    autoHeight: true,
    });

    const treeGridTab3 = new dhx.Grid("@gridIdTab3", {
    columns: columnsTab3,
    data: rawDataTab3,
    leftSplit: 1,
    resizable: true,
    keyNavigation: true,
    rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
    selection: true,
    autoHeight: true,
});


</script>

