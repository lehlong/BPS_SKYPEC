@model SMO.Models.SynthesizeThePlanReportModel
@using System.Text;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var year = ViewBag.Year as int?;
    var gridTab1 = Guid.NewGuid().ToString("N");
    var gridTab2 = Guid.NewGuid().ToString("N");
    var gridTab3 = Guid.NewGuid().ToString("N");
    var gridTab4 = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
}
<ul class="nav nav-tabs" role="tablist" style="width: 100%; display: flex;">
    <li role="presentation" class="active" style="cursor: pointer;">
        <a href="#tab1" title="Kế hoạch theo tháng" data-toggle="tab">I. KẾ HOẠCH SẢN LƯỢNG</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a title="Kế hoạch theo năm" data-toggle="tab" href="#tab2">II. KẾ HOẠCH ĐẦU TƯ, MUA SẮM TRANG THIẾT BỊ</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a title="Kế hoạch theo năm" data-toggle="tab" href="#tab3">III. KẾ HOẠCH SỬA CHỮA LỚN TÀI SẢN CỐ ĐỊNH</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a title="Kế hoạch theo năm" data-toggle="tab" href="#tab4">IV. KẾ HOẠCH CHI PHÍ</a>
    </li>
</ul>
<div class="tab-content" style="padding-bottom:0">
    <div role="tabpanel" class="tab-pane fade in active" id="tab1">
        <div style="height: calc(100vh - 262px); width: 100%" id="@gridTab1"></div>
    </div>

    <div role="tabpanel" class="tab-pane fade" id="tab2">
        <div style="height: calc(100vh - 262px); width: 100%" id="@gridTab2"></div>
    </div>

    <div role="tabpanel" class="tab-pane fade" id="tab3">
        <div style="height: calc(100vh - 262px); width: 100%" id="@gridTab3"></div>
    </div>

    <div role="tabpanel" class="tab-pane fade" id="tab4">
        <div style="height: calc(100vh - 262px); width: 100%" id="@gridTab4"></div>
    </div>
</div>
<script type="text/javascript">
    const gridTab1 = new dhx.Grid("@gridTab1", {
        columns: [
            { id: "order", header: [{ text: "STT", align: "center", rowspan: 2 }], align: "center", minWidth: 100 },

            { id: "code", header: [{ text: "Sản lượng theo sân bay", align: "center", colspan: 2 }, { text: "Mã sân bay", align: "center" }] },
            { id: "name", header: ["", { text: "Tên sân bay", align: "center" }], footer: [{ text: "TỔNG CỘNG" }] },

            { id: "value1", header: [{ text: "HKVN", align: "center", colspan: 3 }, { text: "VNA", align: "center" }], minWidth: 160, align: "right", type: "number", format: "#.#", footer: [{ content: "sum" }] },
            { id: "value2", header: ["", { text: "HKVN#", align: "center" }], minWidth: 160, align: "right", type: "number", format: "#.#", footer: [{ content: "sum" }] },
            { id: "value3", header: ["", { text: "TỔNG", align: "center" }], minWidth: 160, align: "right", type: "number", format: "#.#", footer: [{ content: "sum" }] },

            { id: "value4", header: [{ text: "HKQT", align: "center", rowspan: 2 }], minWidth: 160, align: "right", type: "number", format: "#.#", footer: [{ content: "sum" }] },
            { id: "value5", header: [{ text: "TỔNG", align: "center", rowspan: 2 }], minWidth: 160, align: "right", type: "number", format: "#.#", footer: [{ content: "sum" }] },

        ],
        data: @Html.Raw(JsonConvert.SerializeObject(Model.SanLuong.OrderBy(x => x.Order), jsonSerializeSettings)),
        resizable: true,
        selection: "row",
        rowHeight: 30,
        adjust: true
    });

    const gridTab2 = new dhx.Grid("@gridTab2", {
        columns: [
            { id: "stt", header: [{ text: "STT", align: "center"}], align: "center", width: 100 },
            { id: "name", header: [{ text: "Danh mục đầu tư mua sắm", align: "center" }], width: 500 },
            { id: "value1", header: [{ text: "Nguồn vốn", align: "center" }], width: 140 },
            { id: "value2", header: [{ text: "Tổng vốn đầu tư giai đoạn", align: "center" }], width: 160, type: "number", format: "#.#" },
            { id: "value3", header: [{ text: "Kế hoạch kinh phí đầu tư", align: "center" }], width: 160, type: "number", format: "#.#" },
            { id: "value4", header: [{ text: "Tiến độ triển khai giai đoạn đầu tư", align: "center" }], width: 180 },
            { id: "des", header: [{ text: "Ghi chú", align: "center" }], adjust: true },
        ],
        data: @Html.Raw(JsonConvert.SerializeObject(Model.DauTu, jsonSerializeSettings)),
        resizable: true,
        selection: "row",
        rowHeight: 30,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
    });

    const gridTab3 = new dhx.Grid("@gridTab3", {
        columns: [
            { id: "stt", header: [{ text: "STT", align: "center" }], align: "center", width: 100 },
            { id: "name", header: [{ text: "Danh mục sửa chữa lớn", align: "center" }], width: 500 },
            { id: "valueKP", header: [{ text: "Kế hoạch kinh phí sửa chữa", align: "center" }] , width: 160, type: "number", format: "#.#" },
            { id: "valueQM", header: [{ text: "Quy mô s/c", align: "center" }], adjust: true },
            { id: "des", header: [{ text: "Ghi chú", align: "center" }], adjust: true },
        ],
        data: @Html.Raw(JsonConvert.SerializeObject(Model.SuaChuaLon, jsonSerializeSettings)),
        resizable: true,
        selection: "row",
        rowHeight: 30,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
    });

    var dataCP = @Html.Raw(JsonConvert.SerializeObject(Model.ChiPhi, jsonSerializeSettings));
    var parentData = dataCP.filter(x => x.isBold == true);

    Number.prototype.format = function (n, x, s, c) {
        var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\D' : '$') + ')',
            num = this.toFixed(Math.max(0, ~~n));

        return (c ? num.replace('.', c) : num).replace(new RegExp(re, 'g'), '$&' + (s || ','));
    };

    const gridTab4 = new dhx.Grid("@gridTab4", {
        columns: [
            { id: "stt", header: [{ text: "STT", align: "center", rowspan: 2 }, { text: "" }], align: "center", minWidth: 100 },
            { id: "name", header: [{ text: "Danh mục chi phí", align: "center", rowspan: 2 }, "", { text: "TỔNG CỘNG" }] },
            { id: "valueCP", header: [{ text: "Kế hoạch", align: "center", colspan: 2 }, { text: "Chi phí", align: "center" }, { text: _.sumBy(parentData, "valueCP").format(0, 3, '.', ','), align: "right" }], minWidth: 160, align: "right", type: "number", format: "#.#" },
            { id: "price", header: ["", { text: "ĐG chi phí / 1 tấn nhiên liệu", align: "center" }, ""], minWidth: 160, align: "right", type: "number", format: "#.#" },
            { id: "notes", header: [{ text: "Ghi chú", align: "center", rowspan: 2 }, ""], minWidth: 160 },
        ],
        data: @Html.Raw(JsonConvert.SerializeObject(Model.ChiPhi, jsonSerializeSettings)),
        resizable: true,
        selection: "row",
        adjust: true,
        rowHeight: 30,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
    });

</script>
