@model IList<T_MD_KHOAN_MUC_DAU_TU>
@using SMO.Core.Entities.BP.DAU_TU_XAY_DUNG;
@using SMO.Core.Entities.MD;
@using System.Text;
@using SMO.Service.Class;
@using SMO.Core.Entities;

@{
    var detailCostElements = ViewBag.detailCostElements as IList<T_MD_TEMPLATE_DETAIL_DAU_TU_XAY_DUNG>;
    var costCFHeader = ViewBag.costCFHeader as T_BP_DAU_TU_XAY_DUNG_VERSION;
    var dataCenterModel = ViewBag.dataCenterModel as ViewDataCenterModel;
    var lstData = ViewBag.lstProject as List<T_BP_DAU_TU_XAY_DUNG_DATA>;
    var lstProject = lstData.Select(x => x.DauTuXayDungProfitCenter).ToList();
    var lstSanBay = SelectListUtilities.GetListSanBay();
}

<style>
    .header-year {
        background-color: #FFFFFF !important;
    }

    .icon-function {
        cursor: pointer;
    }

    td {
        overflow: hidden;
    }

    .resize-col {
        resize: horizontal;
        overflow: hidden;
        display: block;
    }

    td .input-edit {
        border: none;
        background: border-box;
        text-align: left;
    }
    .table-screen {
        height: calc(100vh - 162px);
        margin-bottom:0
    }
    .full-screen-table {
        height: calc(100vh -100px) !important;
    }
</style>

@if (Model == null || Model.Count == 0)
{
    Html.RenderPartial("_NothingData");
}
else
{
    Html.RenderPartial("_PartialViewSearchAndDetail", dataCenterModel);
    <div class="export-left-tab">
        <div class="sticky-table sticky-headers sticky-ltr-cells table-screen table">
            <table class="table-condensed table-bordered table-striped font-13 table-zoom" id="table_month">
                <tbody>
                    <tr class="sticky-row strong" data-xls-row="header" style="text-align: center;">
                        <td class="sticky-cell pre-whitespace" style="z-index:11" rowspan="2">COMMENT</td>
                        <td class="sticky-cell pre-whitespace" style="z-index:11" rowspan="2">MÃ DỰ ÁN</td>
                        <td class="sticky-cell pre-whitespace" style="z-index:11" rowspan="2">TÊN DỰ ÁN</td>
                        <td class="pre-whitespace" colspan="3">THÔNG TIN VỀ DANH MỤC ĐẦU TƯ</td>
                        <td class="pre-whitespace" colspan="3">GIÁ TRỊ KL CÔNG VIỆC HOÀN THÀNH</td>
                        <td class="pre-whitespace" colspan="2">GIÁ TRỊ GIẢI NGÂN</td>
                        <td class="pre-whitespace" rowspan="2">GHI CHÚ</td>
                    </tr>
                    <tr class="sticky-row strong" data-xls-row="header">
                        <td class="pre-whitespace">TỔNG MỨC ĐẦU TƯ</td>
                        <td class="pre-whitespace">NGUỒN VỐN</td>
                        <td class="pre-whitespace">TIẾN ĐỘ THỰC HIỆN</td>
                        <td class="pre-whitespace">LUỸ KẾ ĐẾN ĐẦU KỲ LẬP KH</td>
                        <td class="pre-whitespace">KH NĂM</td>
                        <td class="pre-whitespace">TIẾN ĐỘ TRIỂN KHAI TH NĂM KH</td>
                        <td class="pre-whitespace">LUỸ KẾ ĐẾN ĐẦU KỲ LẬP KH</td>
                        <td class="pre-whitespace">KH NĂM</td>
                    </tr>
                        @foreach (var detail in Model.OrderBy(x => x.ORDER))
                        {
                            var space = new StringBuilder();
                            for (int i = 0; i < detail.LEVEL; i++)
                            {
                                space.Append("\t");
                            }

                            <tr>
                                @{
                                    var code = detail.PROJECT_CODE;
                                }
                                @if (!string.IsNullOrEmpty(code))
                                {
                                    <td style="text-align:center;"><i class="material-icons icon-function" onclick="getCommentElement('@code')">comment</i></td>
                                }
                                else
                                {
                                    <td></td>
                                }
                                @{
                                    var isEdit = detail.IS_GROUP ? "disabled" : "";
                                    var codePj = detail.PROJECT_CODE;
                                }

                                <td class="pre-whitespace sticky-cell">@(detail.IS_GROUP? detail.PROJECT_CODE: string.Empty)</td>
                                <td class="pre-whitespace sticky-cell">@($"{space.ToString()}{detail.PROJECT_NAME}")</td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_1', this.value)" value="@detail.VALUE_1.ToStringVN()" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_2', this.value)" value="@detail.VALUE_2" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_3', this.value)" value="@detail.VALUE_3" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_4', this.value)" value="@detail.VALUE_4.ToStringVN()" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_5', this.value)" value="@detail.VALUE_5.ToStringVN()" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_6', this.value)" value="@detail.VALUE_6" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_7', this.value)" value="@detail.VALUE_7.ToStringVN()" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','VALUE_8', this.value)" value="@detail.VALUE_8" />
                                </td>
                                <td>
                                    <input class="input-edit" @isEdit type="text" onchange="onEditCell('@codePj', '@detail.TYPE','DESCRIPTION', this.value)" value="@detail.DESCRIPTION" />
                                </td>
                            </tr>
                        }
                </tbody>
            </table>
        </div>
    </div>

    <script>
        $(document).on("keyup", "#text-search-table", () => SearchTable(5, 0, 4, 5));
        function mask(e) {
            $(e).inputmask({ 'alias': 'decimal', 'groupSeparator': ',', 'digits': 3, 'autoGroup': true, 'autoUnmask': true });
        }

        function getCommentElement(elementCode) {
            var templateCode = $("#TEMPLATE_CODE").val();
            var version = $("#VERSION").val();
            var year = $("#YEAR").val();
            var ajaxParams = {
                url: 'BP/DauTuXayDung/GetCommentElement',
                type: "POST",
                data: {
                    templateCode: templateCode,
                    version: version,
                    year: year,
                    elementCode: elementCode,
                },
            };
            Forms.LoadAjaxModal(ajaxParams);
        }

        function HandleSearch(inputElement) {
            var value = inputElement.value.toLowerCase();
            var table = document.getElementById("table_month");
            var tr = table.getElementsByTagName('tr');
            var searchColumns = [1, 2]; // Chỉ định các cột bạn muốn tìm kiếm, ở đây là cột 0 và cột 1
            for (let i = 2; i < tr.length; i++) {
                var matchFound = false;

                for (let j = 0; j < searchColumns.length; j++) {
                    var indexCell = searchColumns[j];
                    var td = tr[i].getElementsByTagName('td')[indexCell];
                    if (td) {
                        var txtValue = td.textContent || td.innerText;
                        if (txtValue.toLowerCase().indexOf(value) > -1) {
                            matchFound = true;
                            break; // Nếu đã tìm thấy kết quả, thoát khỏi vòng lặp
                        }
                    }
                }

                if (matchFound) {
                    tr[i].style.display = ''; // Hiển thị hàng nếu có kết quả khớp
                } else {
                    tr[i].style.display = 'none'; // Ẩn hàng nếu không có kết quả khớp
                }
            }
        }

        function onEditCell( projectCode, elementCode, column, value) {
            if (value == null || value == "") {
                return;
            }
            var templateCode = $("#TEMPLATE_CODE").val();
            var version = $("#VERSION").val();
            var year = $("#YEAR").val();
            var month = $("#month_bs").val();
            var ajaxParams = {
                url: 'BP/DauTuXayDung/UpdateCellValue',
                type: "POST",
                data: {
                    templateCode: templateCode,
                    version: version,
                    year: year,
                    projectCode: projectCode,
                    elementCode: elementCode,
                    value: value,
                    column: column,
                    month: month 
                },
                dataType: 'json',
                success: function (response) {
                    Message.execute(response);
                }
            };
            Forms.Ajax(ajaxParams);
        }
    </script>
}
