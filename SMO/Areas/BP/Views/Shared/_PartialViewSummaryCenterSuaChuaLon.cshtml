
@model IList<T_MD_KHOAN_MUC_SUA_CHUA>

@using SMO.Core.Entities.MD;
@using SMO.Core.Entities.BP.SUA_CHUA_LON;
@using SMO.Service.Class;
@using System.Text;
@{

    var header = ViewBag.costCFHeader as T_BP_SUA_CHUA_LON_VERSION;
    var dataCenterModel = ViewBag.dataCenterModel as ViewDataCenterModel;
}
@if (Model == null || Model.Count == 0 || header == null)
{
    Html.RenderPartial("_NothingData");
}
else
{

    var detailCostElements = ViewBag.detailCostElements as IList<T_BP_SUA_CHUA_LON_DATA>;
    Html.RenderPartial("_PartialViewSearchAndDetail", dataCenterModel);
    <div class="sticky-table sticky-headers sticky-ltr-cells">
        <table class="table-condensed table-bordered table-striped font-13" id="table">
            <tbody>
                <tr class="sticky-row" data-xls-row="header">
                    <td class="pre-whitespace strong">MÃ KHOẢN MỤC</td>
                    <td class="pre-whitespace strong">TÊN KHOẢN MỤC</td>
                    <td class="pre-whitespace strong">QUY MÔ</td>
                    <td class="pre-whitespace strong">KINH PHÍ</td>
                    <td class="pre-whitespace strong">GHI CHÚ</td>
                </tr>
                @foreach (var item in Model?
                                    .OrderBy(x => x.C_ORDER)
                                    .GroupBy(x => x.CODE)
                                    .Select(x => x.First()))
                {
                    var lstElements = Model.Where(x => !item.IS_GROUP && x.CODE.Equals(item.CODE) && x.IsChildren).ToList();
                    var classParent = item.IS_GROUP ? "strong" : string.Empty;
                    var space = new StringBuilder();
                    for (int i = 0; i < item.LEVEL; i++)
                    {
                        space.Append("\t");
                    }
                    if (item.IS_GROUP)
                    {
                        <tr class="@classParent">
                            <td class="sticky-cell" level="@item.LEVEL">@item.CODE</td>
                            <td class="sticky-cell @classParent">@($"{space.ToString()}{item.NAME}")</td>
                            <td></td>
                            <td>@item.Values[0]</td>
                            <td></td>
                        </tr>
                    }
                    foreach (var element in detailCostElements.Where(x => x.KHOAN_MUC_SUA_CHUA_CODE == item.CODE).OrderBy(x => x.ORG_CODE))
                    {
                            <tr class="@element.KHOAN_MUC_SUA_CHUA_CODE @dataCenterModel.ORG_CODE-@element.KHOAN_MUC_SUA_CHUA_CODE">
                                <td class="sticky-cell">@element.KHOAN_MUC_SUA_CHUA_CODE</td>
                                <td class="sticky-cell">@($"{space.ToString()}{element.KhoanMucSuaChua.NAME}")</td>
                                <td></td>
                                <td>@element.VALUE</td>
                                <td class=""></td>
                            </tr>
                        }
                    }
                
            </tbody>
        </table>
    </div>


    <script>
        $(document).on("keyup", "#text-search-table", () => SearchTable(2, 1, 1, 2));

    </script>
}
