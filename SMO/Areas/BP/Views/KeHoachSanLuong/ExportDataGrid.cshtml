@model List<ViewDataQuantityPlan>
@using SMO.Service.BP.KE_HOACH_SAN_LUONG
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var gridMonth = Guid.NewGuid().ToString("N");
    var gridYear = Guid.NewGuid().ToString("N");
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var dataYear = ViewBag.DataYear as List<ViewDataQuantityPlanYear>;
    var formIdExportExcel = Guid.NewGuid();
}
<style>
    .row-bold .dhx_grid-cell, .row-bold .dhx_tree-cell {
        font-weight: bold
    }
    .grid .dhx_grid-cell {
        word-break: break-word
    }
    .dhx_slider {
        padding: 8px 0;
    }
</style>

<ul class="nav nav-tabs" role="tablist" style="width: 100%; display: flex;">
    <li role="presentation" class="active" style="cursor: pointer;">
        <a href="#tab1" data-toggle="tab">Kế hoạch theo tháng</a>
    </li>
    <li role="presentation" style="cursor: pointer;">
        <a data-toggle="tab" href="#tab2">Kế hoạch theo năm</a>
    </li>
</ul>
<div class="tab-content" style="padding-bottom:0">
    <div role="tabpanel" class="tab-pane fade in active" id="tab1">
        <div style="height: calc(100vh - 250px);" id="@gridMonth"></div>
    </div>
    <div role="tabpanel" class="tab-pane fade" id="tab2">
        <div style="height: calc(100vh - 250px);" id="@gridYear"></div>
    </div>
</div>
<div class="hidden">
    <form id="@formIdExportExcel" target="_blank" method="post" action="@Url.Action("ExportExcelGridData")">
        @Html.Hidden("TreedataMonth")
        @Html.Hidden("TreedataYear")
    </form>
</div>

<script type="text/javascript">

    //Init Data Month...
    const rawDataMonth = @Html.Raw(JsonConvert.SerializeObject(Model, jsonSerializeSettings));
    let columnsMonth = [
        { id: "airport", header: [{ text: "SÂN BAY", align: "center" }, { content: "selectFilter" }], minWidth: 130 },
        { id: "airlines", header: [{ text: "HHK", align: "center" }, { content: "selectFilter" }], minWidth: 120 },
        { id: "element", header: [{ text: "KHOẢN MỤC", align: "center" }, { content: "selectFilter" }], minWidth: 185, footer: [{ text: "TỔNG CỘNG" }] },

        { id: "jan", header: [{ text: "THÁNG 1", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "feb", header: [{ text: "THÁNG 2", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "mar", header: [{ text: "THÁNG 3", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "apr", header: [{ text: "THÁNG 4", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "may", header: [{ text: "THÁNG 5", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "jun", header: [{ text: "THÁNG 6", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "jul", header: [{ text: "THÁNG 7", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "aug", header: [{ text: "THÁNG 8", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "sep", header: [{ text: "THÁNG 9", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "oct", header: [{ text: "THÁNG 10", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "nov", header: [{ text: "THÁNG 11", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "dec", header: [{ text: "THÁNG 12", align: "center" }], align: "right", minWidth: 135, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "total", header: [{ text: "TỔNG NĂM", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "average", header: [{ text: "TRUNG BÌNH", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "des", header: [{ text: "GHI CHÚ", align: "center" }], align: "right", minWidth: 150 },
    ];

    const treeGrid = new dhx.Grid("@gridMonth", {
        columns: columnsMonth,
        data: rawDataMonth,
        leftSplit: 3,
        resizable: true,
        keyNavigation: true,
        selection: true,
        autoHeight: true,
    });

    //Init Data Year...
    const rawDataYear = @Html.Raw(JsonConvert.SerializeObject(dataYear, jsonSerializeSettings));
    let columnsYear = [
        {
            id: "airport", header: [
                { text: "SÂN BAY", colspan: 2, align: 'center' },
                { text: 'MÃ SÂN BAY', align: 'center' },
                { content: "selectFilter" }
            ], align: "center", width: 160
        },
        { id: "airportName", header: ["", { text: "TÊN SÂN BAY", align: "center" }, { content: "selectFilter" }], minWidth: 260, footer: [{ text: "TỔNG CỘNG" }] },
        {
            id: "vna", header: [
                { text: "HKVN", colspan: 3, align: 'center' },
                { text: 'VNA', align: 'center' },
            ], align: "right", width: 150, type: "number", format: "#.#", footer: [{ content: "sum" }]
        },
        { id: "notVna", header: ["",{ text: "HKVN#", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "sumNd", header: ["",{ text: "CỘNG HKVN", align: "center" }], align: "right", minWidth: 150, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "sumQt", header: [{ text: "HKQT", align: "center", rowspan: 2 }], align: "right", minWidth: 150, type: "number", format: "#.#", footer: [{ content: "sum" }] },
        { id: "total", header: [{ text: "TỔNG CỘNG", align: "center", rowspan: 2 }], align: "right", minWidth: 150, type: "number", format: "#.#", footer: [{ content: "sum" }] },
    ];

    const treeYear = new dhx.Grid("@gridYear", {
        columns: columnsYear,
        data: rawDataYear,
        resizable: true,
        keyNavigation: true,
        selection: true,
        autoHeight: true,
    });

    //Init Slider
    const MAIN_FONT_SIZE = 14;
    var FONT_SIZE_CHANGE = 14;
    const widthMapMonth = new Map(columnsMonth.map(({ minWidth, id }) => ([id, minWidth])));
    const widthMapYear = new Map(columnsYear.map(({ minWidth, id }) => ([id, minWidth])));
    const slider = new dhx.Slider("slider", {
        min: 4,
        max: 26,
        step: 1,
        value: MAIN_FONT_SIZE,
        tooltip: false
    });

    slider.events.on("change", value => {
        FONT_SIZE_CHANGE = parseInt(value);
        const fontSize = parseInt(value);
        columnsMonth = columnsMonth.map(column => {
            return {
                ...column,
                minWidth: widthMapMonth.get(column.id) * (fontSize / MAIN_FONT_SIZE),
            };
        });
        columnsYear = columnsYear.map(column => {
            return {
                ...column,
                minWidth: widthMapYear.get(column.id) * (fontSize / MAIN_FONT_SIZE ),
            };
        });
        $(".dhx_grid-cell").css("font-size", `${value}px`);
        $(".dhx_tree-cell").css("font-size", `${value}px`);
        $(".dhx_grid-header-cell").css("font-size", `${value}px`);
        treeGrid.setColumns(columnsMonth);
        treeYear.setColumns(columnsYear);
    });

    treeGrid.events.on("scroll", function (e) {
        $(".dhx_grid-cell").css("font-size", `${FONT_SIZE_CHANGE}px`);
        $(".dhx_tree-cell").css("font-size", `${FONT_SIZE_CHANGE}px`);
    });
    treeYear.events.on("scroll", function (e) {
        $(".dhx_grid-cell").css("font-size", `${FONT_SIZE_CHANGE}px`);
        $(".dhx_tree-cell").css("font-size", `${FONT_SIZE_CHANGE}px`);
    });

    function DownloadDataQuantityPlan() {
        var TreedataMonth = JSON.stringify(treeGrid.data.serialize());
        var TreedataYear = JSON.stringify(treeYear.data.serialize());
        $('#@formIdExportExcel #TreedataMonth').val(TreedataMonth);
        $('#@formIdExportExcel #TreedataYear').val(TreedataYear);
        $('#@formIdExportExcel').submit();
    }

</script>





