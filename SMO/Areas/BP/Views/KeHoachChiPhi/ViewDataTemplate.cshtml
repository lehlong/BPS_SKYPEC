@model IList<string>
@using SMO.Core.Entities;
@using SMO.Core.Entities.MD;
@using SMO.Service.Class;
@using System.Text;
@using Newtonsoft.Json.Serialization;
@using Newtonsoft.Json;
@{
    var viewId = Guid.NewGuid().ToString();
    var jsonSerializeSettings = new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() };
    var dataCenterModel = ViewBag.dataCenterModel as ViewDataCenterModel;
    var lstDepartment = SelectListUtilities.GetAllCostCenter().ToList();
    var orgCode = dataCenterModel.ORG_CODE;
    var tempalteCode = dataCenterModel.TEMPLATE_CODE;
    var year = dataCenterModel.YEAR;
    var version = dataCenterModel.VERSION;
    var skip = ViewBag.Skip;
    var formId = Guid.NewGuid();
}
<style>
    .icon-function {
        cursor: pointer;
    }

    .table-screen {
        height: calc(100vh - 162px);
        margin-bottom: 0
    }

    .full-screen-table {
        height: calc(100vh -100px) !important;
    }

    .input-edit {
        background: none;
        border: none;
        text-align: right;
        width: 86px;
    }

    th {
        text-align: center;
    }

    hr {
        margin-top: 6px;
        margin-bottom: 6px;
        border: 0;
        border-top: 1px solid #eeeeee;
    }
</style>
<div id='@viewId' class="container-fluid child-content">
    <div class="card border-grey">
        <div class="body" style="padding-top: 0px;">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a style="padding-left:0px"><i class="material-icons col-fecon">clear_all</i> DỮ LIỆU KẾ HOẠCH CHI PHÍ</a>
                </li>
            </ul>

            <div class="tab-content">
                <div>
                    @Html.MyButton("cmdBack", "Quay lại", string.Format("Forms.Close('{0}');", viewId), "Alt+N", "arrow_back")
                    @Html.MyButton("cmdDownload", "Xuất Excel", "ExportExcel();", "Alt+N", "download")
                    @Html.MyButton("cmdDownload", "Kết xuất", "LoadUpdate();", "Alt+N", "search")
                    <a id="download-data" href="@Url.Action("DownloadData", new {modelJson = JsonConvert.SerializeObject(dataCenterModel)})" target="_blank" hidden></a>
                </div>
                <hr />
                <div id="load-paging">
                </div>
            </div>
        </div>
    </div>
</div>
<span id="reload_paging" style="display:none;"></span>
<script>
    function ExportExcel() {
        document.getElementById('download-data').click();
    }

    function LoadPaging() {
        $("#load-paging").empty();
        const model = @Html.Raw(JsonConvert.SerializeObject(dataCenterModel));
        var ajaxParams = {
            url: "@Url.Action("ViewDataTemplatePaging")",
            data: {
                model: JSON.stringify(model),
                skip: 0
            },
            htmlTarget: '#load-paging',
        };
        Forms.LoadAjax(ajaxParams);
    }


    function LoadUpdate(){
        LoadPaging();
    }

    $(function () {
        LoadPaging()
    });

    function onEditCell(type, sanBay, costCenter, elementCode, value) {
        if (value == null || value == "") {
            return;
        }
        var templateCode = '@dataCenterModel.TEMPLATE_CODE';
        var version = @dataCenterModel.VERSION;
        var year = @dataCenterModel.YEAR;
        var ajaxParams = {
            url: 'BP/KeHoachChiPhi/UpdateCellValue',
            type: "POST",
            data: {
                templateCode: templateCode,
                version: version,
                year: year,
                type: type,
                sanBay: sanBay,
                costCenter: costCenter,
                elementCode: elementCode,
                value: value
            },
            dataType: 'json',
            success: function (response) {
                Message.execute(response);
                $("#reload_paging").click();
            }
        };
        Forms.Ajax(ajaxParams);
    }

    function getHistoryEditElement(elementCode) {
        var templateCode = '@dataCenterModel.TEMPLATE_CODE';
        var version = @dataCenterModel.VERSION;
        var year = @dataCenterModel.YEAR;
        var ajaxParams = {
            url: 'BP/KeHoachChiPhi/GetHistoryEditElement',
            type: "POST",
            data: {
                templateCode: templateCode,
                version: version,
                year: year,
                elementCode: elementCode,
            },
        };
        Forms.LoadAjaxModalLarge(ajaxParams);
    }

    function getCommentElement(elementCode) {
        var templateCode = '@dataCenterModel.TEMPLATE_CODE';
        var version = @dataCenterModel.VERSION;
        var year = @dataCenterModel.YEAR;
        var ajaxParams = {
            url: 'BP/KeHoachChiPhi/GetCommentElement',
            type: "POST",
            data: {
                templateCode: templateCode,
                version: version,
                year: year,
                elementCode: elementCode,
            },
        };
        Forms.LoadAjaxModal(ajaxParams);
    }

    function getAssignDepartmentElement(elementCode) {
        var templateCode = '@dataCenterModel.TEMPLATE_CODE';
        var version = @dataCenterModel.VERSION;
        var year = @dataCenterModel.YEAR;
        var ajaxParams = {
            url: 'BP/KeHoachChiPhi/GetAssignDepartmentElement',
            type: "POST",
            data: {
                templateCode: templateCode,
                version: version,
                year: year,
                elementCode: elementCode,
            },
        };
        Forms.LoadAjaxModal(ajaxParams);
    }

    function IsDoneExpertise(isCheck, element) {
        var originalCheckboxState = $('#chkItem' + element).prop('checked');
        if (!isCheck) {
            Swal.fire({
                title: "Lưu ý?",
                text: "Hạng mục này đã được thẩm định! Hành động này sẽ không được lưu lại!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Huỷ"
            }).then((result) => {
                if (result.isConfirmed) {
                    var ajaxParams = {
                        url: 'BP/KeHoachChiPhi/UnExpertise',
                        type: 'POST',
                        data: {
                            templateCode: '@tempalteCode',
                            version: '@version',
                            year: '@year',
                            elementCode: element,
                        },
                        dataType: 'json',
                        success: function (response) {
                            Message.execute(response)
                        }
                    };
                    Forms.Ajax(ajaxParams);
                }
                else {
                    $('#chkItem' + element).prop('checked', !originalCheckboxState);
                }
            });
            return;
        } else {
            Swal.fire({
                title: "Lưu ý?",
                text: "Bạn có chắc hoàn thành thẩm định chỉ tiêu này?",
                icon: "question",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Huỷ"
            }).then((result) => {
                if (result.isConfirmed) {
                    var ajaxParams = {
                        url: 'BP/KeHoachChiPhi/Expertise',
                        type: 'POST',
                        data: {
                            templateCode: '@tempalteCode',
                            version: '@version',
                            year: '@year',
                            elementCode: element,
                        },
                        dataType: 'json',
                        success: function (response) {
                            Message.execute(response)
                        }
                    };
                    Forms.Ajax(ajaxParams);
                }
                else {
                    $('#chkItem' + element).prop('checked', !originalCheckboxState);
                }
            });
        }
    }
</script>



