@model SMO.Service.BP.KE_HOACH_CHI_PHI.KeHoachChiPhiService
@{
    Model.ViewId = Guid.NewGuid().ToString();
    Model.FormId = Guid.NewGuid().ToString();
}
<div id='@Model.ViewId' class="container-fluid child-content">
    @using (Ajax.BeginForm("ImportExcel", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId, @enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.ObjDetail.TIME_YEAR)
        <div class="card border-grey">
            <div class="body" style="padding-top: 0px;">
                <ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active">
                        <a style="padding-left:0px"><i class="material-icons col-fecon">clear_all</i> @ProfileUtilities.User.Organize.NAME.ToUpper() NHẬP KẾ HOẠCH NĂM @Model.ObjDetail.TIME_YEAR</a>
                    </li>
                </ul>

                <div class="tab-content">
                    <div class="page-function">
                        <div class="page-function-button m-r-20">
                            @Html.MyButton("cmdBack", "Quay lại", string.Format("Forms.Close('{0}');", @Model.ViewId), "Alt+N", "arrow_back")
                            @Html.MyButton("cmdSave", "Nhập dữ liệu", "SubmitImportExcel();", "Alt+N", "done_all")
                        </div>
                    </div>

                    <div class="row m-t-20">
                        <div class="col-xs-1"></div>
                        <div class="col-lg-7 col-xs-10">
                            <label>Chọn kiểu template</label>
                            <div class="form-group">
                                @Html.MyDropDownListFor(x => x.ObjDetail.TYPE_UPLOAD,
                                SelectListUtilities.GetTypeUpload(),
                                    new
                                    {
                                        @class = "selectpicker show-tick",
                                        @data_live_search = "true",
                                        @data_container = "body"
                                    })
                            </div>

                            <label>Chọn mẫu khai báo</label>
                            <div class="form-group">
                                @Html.MyDropDownListFor(x => x.ObjDetail.TEMPLATE_CODE,
                                SelectListUtilities.GetTemplateOfOrg(ProfileUtilities.User.ORGANIZE_CODE, BudgetType.ChiPhi, ElementType.ChiPhi, TemplateObjectType.ChiPhi),
                                    new
                                    {
                                        @class = "selectpicker show-tick",
                                        @data_live_search = "true",
                                        @data_container = "body",
                                        @onchange = "onChangeTemplate(this.value)"
                                    })
                            </div>

                            <label>Chọn file</label>
                            <div class="form-group">
                                <div class="form-line">
                                    <input type="file" accept=".xls, .xlsx" id="files" name="files" />
                                </div>
                            </div>

                            <label>Chọn kịch bản kế hoạch</label>
                            <div class="form-group">
                                @Html.MyDropDownListFor(x => x.ObjDetail.KICH_BAN,
                                SelectListUtilities.GetAllKichBan(),
                                    new
                                    {
                                        @class = "selectpicker show-tick",
                                        @data_live_search = "true",
                                        @data_container = "body"
                                    })
                            </div>

                            <label>Chọn phiên bản kế hoạch</label>
                            <div class="form-group">
                                @Html.MyDropDownListFor(x => x.ObjDetail.PHIEN_BAN,
                                SelectListUtilities.GetAllPhienBan(),
                                    new
                                    {
                                        @class = "selectpicker show-tick",
                                        @data_live_search = "true",
                                        @data_container = "body"
                                    })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
<script type="text/javascript">
        $(function () {
            Forms.CompleteUI();
        });

    function SubmitImportExcel() {
        if (document.getElementById("files").files.length == 0) {
            alert("Vui lòng chọn file upload!");
            return;
        }
        var formData = new FormData($('#@Model.FormId')[0]);
        Forms.ShowLoading();
        $.ajax({
            type: "POST",
            url: '@Url.Action("ImportExcel")',
            data: formData,
            contentType: false,
            processData: false,
            success: function (response) {
                Message.execute(response);
                Forms.HideLoading();
            },
            error: Forms.AjaxErrorHandler
        });
    }
    function onChangeTemplate(value) {
        $.ajax({
            type: "POST",
            url: '@Url.Action("CheckTemplate")',
            data: {
                template: value,
                year: '@Model.ObjDetail.TIME_YEAR',
                orgCode: '@ProfileUtilities.User.Organize.CODE'
            },
            success: function (response) {
                if (response.State) {
                    $(`#@Model.ViewId #ObjDetail_PHIEN_BAN option[value=${response.Data.PHIEN_BAN}]`).attr('selected', 'selected').trigger('change');
                    $(`#@Model.ViewId #ObjDetail_KICH_BAN option[value=${response.Data.KICH_BAN}]`).attr('selected', 'selected').trigger('change');
                    if (response.Data.KICH_BAN != null && response.Data.PHIEN_BAN != null) {
                        $("#@Model.ViewId #ObjDetail_KICH_BAN").prop('disabled', 'disabled');
                        $("#@Model.ViewId #ObjDetail_PHIEN_BAN").prop('disabled', 'disabled');
                    } else {
                        $("#@Model.ViewId #ObjDetail_KICH_BAN").removeAttr("disabled");
                        $("#@Model.ViewId #ObjDetail_PHIEN_BAN").removeAttr("disabled");
                    }
                }
            },
            error: Forms.AjaxErrorHandler
        });
    }
    onChangeTemplate($("#@Model.ViewId #ObjDetail_TEMPLATE_CODE").val());
</script>
</div>

