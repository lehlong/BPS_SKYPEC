@model SMO.Service.MD.TemplateService
@using SMO.Core.Entities.MD;
@using SMO.Repository.Implement.MD;
@{
    Model.ViewId = Guid.NewGuid().ToString();
    Model.FormId = Guid.NewGuid().ToString();
    var period = SelectListUtilities.GetPureTimeYear();
    var selectList = SelectListUtilities.GetTimeYear(false);
    Model.TIME_YEAR = (int?)selectList.SelectedValue ?? 0;
}

@* load 2 view: edit and tree *@

<div id='@Model.ViewId' class="container-fluid child-content">
    <style>
        .pre-whitespace {
            white-space: pre;
        }
    </style>
    <link href="~/Content/zTreeStyle/zTreeStyle.css" rel="stylesheet" />
    <script src="~/Scripts/Ztree/jquery.ztree.core-3.5.min.js"></script>
    <script src="~/Scripts/Ztree/jquery.ztree.excheck-3.5.min.js"></script>
    <div class="card border-grey">
        <div class="body" style="padding-top: 0px;">
            <div class="p-t-10">
                @Html.MyButton("cmdBack", "Quay lại", string.Format("Forms.Close('{0}');", @Model.ViewId), "Alt+N", "arrow_back")
            </div>

            <ul class="nav nav-tabs tab-nav-right" role="tablist">
                <li role="presentation"><a href="#generalInformation" data-toggle="tab">Thông tin chung</a></li>
                <li role="presentation" class="active"><a href="#detailInformation" data-toggle="tab">Chọn bộ phận và khoản mục</a></li>
            </ul>
            <div class="tab-content">
                <div role="tabpanel" class="tab-pane fade" id="generalInformation">
                    @using (Ajax.BeginForm("Update", null, FormDataUtils.GetAjaxOptions(Model.ViewId), new { @id = Model.FormId }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(x => x.ObjDetail.CODE)
                        @Html.HiddenFor(x => x.ObjDetail.ORG_CODE)
                        @Html.HiddenFor(x => x.ObjDetail.ELEMENT_TYPE)
                        @Html.HiddenFor(x => x.ObjDetail.BUDGET_TYPE)
                        @Html.HiddenFor(x => x.ObjDetail.OBJECT_TYPE)
                        @Html.HiddenFor(x => x.ObjDetail.ACTIVE)
                        <div class="card">
                            <div class="body" style="padding-top: 0px;">
                                <div class="tab-content">
                                    <div class="page-function">
                                        <div class="page-function-button m-r-20">
                                            @Html.MyButton("cmdSave", "Lưu lại", string.Format("Forms.SubmitForm('{0}');", @Model.FormId), "Alt+N", "done_all")
                                            @Html.MyButton("cmdViewSample",
                                            "Xem trước",
                                            "PreviewTempate();",
                                            "Alt+V", "search")
                                            @Html.MyButton("cmdDownloadTemlate",
                                            "Download mẫu",
                                            "DownloadTemplate();",
                                            "Alt+V", "file_download")
                                        </div>
                                    </div>
                                    <div class="row m-t-20">
                                        <div class="col-xs-1"></div>
                                        <div class="col-lg-7 col-xs-10">
                                            <label>Loại đối tượng chịu kế hoạch</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyDropDownListFor(m => m.ObjDetail.ORG_CODE, SelectListUtilities.GetCostCenter(), new { @disabled = "true" })
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.ORG_CODE)
                                            </div>

                                            <label>Loại khoản mục</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyDropDownListFor(m => m.ObjDetail.ELEMENT_TYPE, SelectListUtilities.GetElementTypes(), new { @disabled = "true" })
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.ELEMENT_TYPE)
                                            </div>

                                            <label>Loại kế hoạch</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyDropDownListFor(m => m.ObjDetail.BUDGET_TYPE, SelectListUtilities.GetBudgetTypes(), new { @disabled = "true" })
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.BUDGET_TYPE)
                                            </div>

                                            @*<label>Đơn vị khai báo dữ liệu</label>
                                                <div class="form-group">
                                                    @Html.MyDropDownListFor(x => x.ObjDetail.ORG_CODE,
                                                    SelectListUtilities.GetChildOrg<T_MD_COST_CENTER, CostCenterRepo>
                                                        (),
                                                        new
                                                        {
                                                        @class = "selectpicker show-tick",
                                                        @data_live_search = "true",
                                                        @data_container = "body",
                                                        @disabled = "true"
                                                        })
                                                        @Html.ValidationMessageFor(m => m.ObjDetail.ORG_CODE)
                                                </div>*@

                                            <label>Mã mẫu khai báo</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyTextBoxFor(m => m.ObjDetail.CODE, new { @disabled = "true" })
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.CODE)
                                            </div>

                                            <label>Tiêu đề</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyTextBoxFor(m => m.ObjDetail.TITLE)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.TITLE)
                                            </div>

                                            <label>Tên mẫu khai báo</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyTextBoxFor(m => m.ObjDetail.NAME)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.NAME)
                                            </div>

                                            <label>Ghi chú</label>
                                            <div class="form-group">
                                                <div class="form-line">
                                                    @Html.MyTextAreaFor(m => m.ObjDetail.NOTES)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.ObjDetail.NOTES)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                </div>
                <div role="tabpanel" class="tab-pane fade in active" id="detailInformation">
                    <div class="card">
                        <div class="body" style="padding-top: 0px;">
                            <div class="tab-content">
                                <div class="page-function">
                                    <div class="page-function-button" style="float:left">
                                        @Html.MyButton("cmdSave", "Lưu lại", "saveDetailInformation()", "Alt+N", "done_all")
                                        @Html.MyButton("cmdViewSample",
                                            "Xem trước",
                                            "PreviewTempate();",
                                            "Alt+V", "search")
                                        @Html.MyButton("cmdDownloadTemlate",
                                            "Download mẫu",
                                            "DownloadTemplate();",
                                            "Alt+V", "file_download")
                                        @Html.MyButton("cmdCopy",
                                            "Copy mẫu",
                                            "CopyTemplate();",
                                            "Alt+V", "transform")
                                    </div>
                                    <div class="input-group page-function-search" style="margin-bottom: 7px !important; width: 150px;">
                                        @Html.MyDropDownListFor(m => m.TIME_YEAR, selectList,
                                        new
                                        {
                                            @onchange = "ChangeYear(this.value);",
                                            @data_live_search = "true",
                                            @class = "selectpicker show-tick",
                                            data_container = "body",
                                            @data_val = false
                                        })
                                    </div>
                                </div>
                                <div class="row m-t-20">
                                    <div id="load-paging"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        function PreviewTempate() {
            var year = $("#TIME_YEAR").val();
            Forms.LoadAjax('@(Url.Action("ViewTemplate", new { templateId = Model.ObjDetail.CODE }))&year=' + year);
        }

        function DownloadTemplate() {
            var year = $("#TIME_YEAR").val();
            window.open('@(Url.Action("DownloadTemplate", new { templateId = Model.ObjDetail.CODE }))&year=' + year);
        }

        LoadPaging();

        function LoadPaging() {
            var year = $("#TIME_YEAR").val();
            var month = $("#month_bs");
            let monthVal = 0;
            if (month.length > 0) {
                monthVal = month.val();
            }
            $("#load-paging").empty();
            var ajaxParams = {
                url: "@Url.Action("ViewDataDauTu")",
                data: { templateId: '@Model.ObjDetail.CODE', type: 'XDTTB', year },
                htmlTarget: '#load-paging',
            };
            Forms.LoadAjax(ajaxParams);
        }

        function saveDetailInformation() {
            $("#saveTemplate").click();
        }

        function SetHeightTree() {
            $("#divTreeCompany").height($(window).height() - 325);
            $("#divTreeProject").height($(window).height() - 325);
            $("#divTreeElement").height($(window).height() - 325);
        }

        $(window).on('resize', SetHeightTree);

        $(function () {
            Forms.CompleteUI();
        });
        function ChangeYear(year) {
            console.log(year);
            if (year) {
                $("#TIME_YEAR").val(year);
                $("#TIME_YEAR").selectpicker('refresh');
                LoadPaging();

            } else {
                BuildTree();
                BuildTreeElement();
                setTimeout(() => triggerSelectProject(), 2000);
            }
        }

        function CopyTemplate() {
            const inputOptions = {
                @foreach (var year in period)
                {
                    <text>@year.TIME_YEAR: '@year.TIME_YEAR',</text>
                }
            };
            var sourceYear = $("#TIME_YEAR").val();
            (async () => {

                const { value: destinationYear } = await Swal.fire({
                    title: 'Chọn năm kế hoạch muốn copy từ năm ' + sourceYear,
                    input: 'select',
                    inputOptions: inputOptions,
                    inputValue: @Model.TIME_YEAR,
                    showCancelButton: true,
                    inputValidator: (destinationYear) => {
                        return new Promise((resolve) => {
                            if (destinationYear !== sourceYear) {
                                resolve()
                            } else {
                                resolve('Năm kế hoạch đích phải khác với năm nguồn.')
                            }
                        })
                    }
                })

                if (destinationYear) {
                    Forms.ShowLoading();
            var ajaxParams = {
                url: '@Url.Action("CopyTemplate")',
                type: "POST",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: { sourceYear, destinationYear, templateId: '@Model.ObjDetail.CODE' },
                success: function (response) {
                    Message.execute(response);
                }
            };
            Forms.Ajax(ajaxParams);
                }

            })()
        }
    </script>
</div>

