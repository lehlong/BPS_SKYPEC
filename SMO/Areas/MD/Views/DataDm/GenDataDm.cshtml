
@model List<SMO.Core.Entities.MD.T_MD_HEADER_DM>
@using Newtonsoft.Json;
@using Newtonsoft.Json.Serialization;
@{
    var data = Model.Select(x => new
    {
       STT=x.STT,
       NAME=x.NAME,
       VALUE=x.VALUE,
       NOTE=x.NOTE,
       DVT=x.DVT
    }
        );

    var gridId = Guid.NewGuid().ToString();


}

<div style="height: calc(100vh - 240px); width: 100%" id="@gridId"></div>
<script>
    const rawData =  @Html.Raw(JsonConvert.SerializeObject(data));



    let columns = [
        { id: "STT", header: [{ text: "Stt", align: "center" }], minWidth: 220 },
        { id: "NAME", header: [{ text: "Chỉ tiêu", align: "center" }], minWidth: 200 },
        { id: "VALUE", header: [{ text: "Kế hoạch", align: "center" }], minWidth: 200, type: "number", format: "#.#" },
        { id: "NOTE", header: [{ text: "Ghi Chú", align: "center" }], minWidth: 200, type: "number", format: "#.#" },


    ];
    const Gird = new dhx.TreeGrid("@gridId", {
        columns,
        data: rawData,
        selection: "row",
        resizable: true,
        rowCss: function ({ isBold }) { return isBold == true ? "row-bold" : "" },
    });
    let valuechange = [];
    Gird.events.on("afterEditEnd", (value, row, column) => {
        console.log(row);
        const index = valuechange.findIndex(item => item.STT == row.STT);
        console.log(index);
        if (index !== -1) {
            // Nếu hàng đã tồn tại, cập nhật giá trị
            valuechange[index] = {
                STT:row.STT,
                NAME:row.NAME,
                VALUE:row.VALUE,
                NOTE:row.NOTE,
            };
        } else {
            // Nếu hàng chưa tồn tại, thêm mới
            valuechange.push({
                STT:row.STT,
                NAME:row.NAME,
                VALUE:row.VALUE,
                NOTE:row.NOTE,
            });
        }
        console.log(valuechange);
    });

    Gird.events.on("cellClick", (row, column, editorType) => {

            if (row.isBold == true) {
                column.editable = false

            } else {
                column.editable = true

            }
    });


       function saveIPutData() {
           var year = $("#time-year").val();
           var area = $("#area").val();
            var ajaxParams = {
         url: "@Url.Action("Update")",
         type: "POST",
         data: {
             data: JSON.stringify(valuechange),
             year: year,
             area: area
         },
         dataType: 'json',
         success: function (response) {
             Message.execute(response);
         }
     }
           Forms.Ajax(ajaxParams)
            valuechange = [];
 }

</script>

