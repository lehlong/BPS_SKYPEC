@model SMO.Service.MD.ElementService
@{
    Model.ViewId = Guid.NewGuid().ToString();
    Model.FormId = Guid.NewGuid().ToString();
    var lstTimeYear = SelectListUtilities.GetTimeYear(false);
    var yearDefault = Convert.ToString(lstTimeYear.SelectedValue);
    var formIdExportExcel = Guid.NewGuid();
}
<div id='@Model.ViewId' class="container-fluid child-content">

    <div class="card border-grey">
        <div class="body" style="padding-top: 0px;">
            <ul class="nav nav-tabs" role="tablist">
                <li role="presentation" class="active">
                    <a style="padding-left:0px"><i class="material-icons col-fecon">clear_all</i> KẾ HOẠCH GIÁ VỐN</a>
                </li>
            </ul>

            <div class="tab-content">
                <div class="page-function">
                    <div class="page-function-button m-r-20" style="float:left">
                        @Html.MyButton("cmdBack", "Quay lại", string.Format("Forms.Close('{0}');", @Model.ViewId), "Alt+N", "arrow_back")
                        @Html.MyButton("cmdAdd", "Xuất Excel", "DownloadData();", "Alt+N", "file_download")
                    </div>

                    <div class="input-group page-function-search" style="margin-bottom: 7px !important; max-width:720px">
                        <div class="row">
                            <div class="col-md-4">
                                <select id="TIME_YEAR" class="form-control selectpicker show-tick" data_live_search="true" data_container="body" onchange="onChangeTimeYear()">
                                    @foreach (var temp in lstTimeYear)
                                    {
                                        if (temp.Value == yearDefault)
                                        {
                                            <option value="@temp.Value" selected>@temp.Text</option>
                                        }
                                        else
                                        {
                                            <option value="@temp.Value">@temp.Text</option>
                                        }
                                    }
                                </select>
                            </div>
                            <div class="col-md-4">
                                <select id="AREA_ID" class="form-control selectpicker show-tick" data_live_search="true" data_container="body" onchange="onChangeTimeYear()">
                                    <option value="" selected>-</option>
                                    <option value="MB">Miền Bắc</option>
                                    <option value="MT">Miền Trung</option>
                                    <option value="MN">Miền Nam</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    
                </div>

                <div id="divResult">

                </div>
                <div class="hidden">
                    <form id="@formIdExportExcel" target="_blank" method="post" action="@Url.Action("DownloadDataKHGV")">
                        @Html.Hidden("year")
                        @Html.Hidden("area")
                    </form>
                </div>
            </div>
        </div>
    </div>
    <script type="text/javascript">
        function SubmitIndex() {
            Forms.SubmitForm('@Model.FormId');
        }

        function DownloadData() {
            var year = $('#TIME_YEAR').val();
            var area = $("#@Model.ViewId #AREA_ID").val();
            $('#@formIdExportExcel #year').val(year);
            $('#@formIdExportExcel #area').val(area);
             $('#@formIdExportExcel').submit();
        }

        function GetDataKeHoachGiaVon(value) {
            $("#@Model.ViewId #divResult").empty();
            var year = $("#@Model.ViewId #TIME_YEAR").val();
            var area = $("#@Model.ViewId #AREA_ID").val();
            var ajaxParams = {
                url: "@Url.Action("GetDataKeHoachGiaVon")",
                data: {
                    year: year,
                    area: area,
                },
                htmlTarget: '#divResult',
            };
            Forms.LoadAjax(ajaxParams);
        }

        function onChangeTimeYear(value) {
            GetDataKeHoachGiaVon(value);
        }

        $(function () {
            Forms.CompleteUI();
            onChangeTimeYear($("#TIME_YEAR").val())
        });

        $(function () {
            Forms.SubmitForm('@Model.FormId');
            Forms.CompleteUI();
            Forms.SubmitByEnter("@Model.FormId");
        });

        var fontSize = 13;
        function ZoomIn() {
            fontSize--;
            if (fontSize < 6) {
                fontSize = 6;
            }
            Zoom(fontSize);
        }

        function ZoomOut() {
            fontSize++;
            if (fontSize > 20) {
                fontSize = 20;
            }
            Zoom(fontSize);
        }

        function Zoom(fontSize) {
            try {
                var $table_zoom = $('.table-zoom');

                $('.table-zoom').attr('class', $table_zoom.get(0).className.replace(/\bfont-\S+/g, ''));
                $(".table-zoom").addClass("font-" + fontSize);

            } catch (ex) {
                console.log("Can't zoom table!")
            }
        }
    </script>
</div>





